$date
	Fri Oct 20 08:04:19 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module TestBench $end
$var reg 1 ! Clk $end
$var reg 1 " Reset $end
$var integer 32 # counter [31:0] $end
$var integer 32 $ i [31:0] $end
$var integer 32 % outfile [31:0] $end
$scope module CPU $end
$var wire 1 & RegWrite $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 1 ' zero $end
$var wire 32 ( read_data_2 [31:0] $end
$var wire 32 ) read_data_1 [31:0] $end
$var wire 32 * pc_output [31:0] $end
$var wire 32 + pc_input [31:0] $end
$var wire 32 , mux_output [31:0] $end
$var wire 32 - instruction [31:0] $end
$var wire 32 . immediate32 [31:0] $end
$var wire 32 / ALU_result [31:0] $end
$var wire 3 0 ALU_control [2:0] $end
$var wire 1 1 ALUSrc $end
$var wire 2 2 ALUOp [1:0] $end
$scope module ALU $end
$var wire 1 ' zero $end
$var wire 32 3 read_data_2 [31:0] $end
$var wire 32 4 read_data_1 [31:0] $end
$var wire 32 5 ALU_result [31:0] $end
$var wire 3 6 ALUControl [2:0] $end
$upscope $end
$scope module ALU_Control $end
$var wire 3 7 funct3 [2:0] $end
$var wire 7 8 funct7 [6:0] $end
$var wire 2 9 ALUOp [1:0] $end
$var wire 3 : ALUControl [2:0] $end
$upscope $end
$scope module Add_PC $end
$var wire 32 ; input_data_2 [31:0] $end
$var wire 32 < output_data [31:0] $end
$var wire 32 = input_data_1 [31:0] $end
$upscope $end
$scope module Control $end
$var wire 1 & RegWrite $end
$var wire 7 > opcode [6:0] $end
$var wire 1 1 ALUSrc $end
$var wire 2 ? ALUOp [1:0] $end
$upscope $end
$scope module Instruction_Memory $end
$var wire 32 @ instr_o [31:0] $end
$var wire 32 A addr_i [31:0] $end
$upscope $end
$scope module MUX_ALUSrc $end
$var wire 1 1 mux_select $end
$var wire 32 B output_data [31:0] $end
$var wire 32 C input_data_2 [31:0] $end
$var wire 32 D input_data_1 [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ! clk_i $end
$var wire 32 E pc_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 32 F pc_o [31:0] $end
$upscope $end
$scope module Registers $end
$var wire 5 G RDaddr_i [4:0] $end
$var wire 32 H RDdata_i [31:0] $end
$var wire 5 I RS1addr_i [4:0] $end
$var wire 32 J RS1data_o [31:0] $end
$var wire 5 K RS2addr_i [4:0] $end
$var wire 32 L RS2data_o [31:0] $end
$var wire 1 & RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var integer 32 M i [31:0] $end
$upscope $end
$scope module Sign_Extend $end
$var wire 12 N instruction20to31 [11:0] $end
$var wire 32 O SignExtend [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1010 O
b1010 N
b100000 M
b0 L
b1010 K
b0 J
b0 I
b1010 H
b101 G
b0 F
b100 E
b0 D
b1010 C
b1010 B
b0 A
b101000000000001010010011 @
b1 ?
b10011 >
b0 =
b100 <
b100 ;
b110 :
b1 9
b0 8
b0 7
b110 6
b1010 5
b0 4
b1010 3
b1 2
11
b110 0
b1010 /
b1010 .
b101000000000001010010011 -
b1010 ,
b100 +
b0 *
b0 )
b0 (
0'
1&
b11 %
b100000000 $
b0 #
0"
0!
$end
#12
1"
#25
b1101 /
b1101 5
b1101 H
b1101 ,
b1101 3
b1101 B
b1101 .
b1101 C
b1101 O
b1101 N
b110 G
b1101 K
b110100000000001100010011 -
b110100000000001100010011 @
b1000 +
b1000 <
b1000 E
b100 *
b100 =
b100 A
b100 F
b1 #
1!
#50
0!
#75
b10000010 /
b10000010 5
b10000010 H
b101 0
b101 6
b101 :
b1101 ,
b1101 3
b1101 B
b0 2
b0 9
b0 ?
01
b1 8
b100110 .
b100110 C
b100110 O
b100110 N
b111 G
b1101 (
b1101 D
b1101 L
b110 K
b1010 )
b1010 4
b1010 J
b101 I
b110011 >
b10011000101000001110110011 -
b10011000101000001110110011 @
b1100 +
b1100 <
b1100 E
b1000 *
b1000 =
b1000 A
b1000 F
b10 #
1!
#100
0!
#125
b10101001 /
b10101001 5
b10101001 H
1'
b11100 G
b1101 )
b1101 4
b1101 J
b110 I
b10011000110000111000110011 -
b10011000110000111000110011 @
b10000 +
b10000 <
b10000 E
b1100 *
b1100 =
b1100 A
b1100 F
b11 #
1!
#150
0!
#175
b1100 /
b1100 5
b1100 H
0'
b110 0
b110 6
b110 :
b11111111111111111111111111111111 ,
b11111111111111111111111111111111 3
b11111111111111111111111111111111 B
b1 2
b1 9
b1 ?
11
b1111111 8
b11111111111111111111111111111111 .
b11111111111111111111111111111111 C
b11111111111111111111111111111111 O
b111111111111 N
b110 G
b0 (
b0 D
b0 L
b11111 K
b10011 >
b11111111111100110000001100010011 -
b11111111111100110000001100010011 @
b10100 +
b10100 <
b10100 E
b10000 *
b10000 =
b10000 A
b10000 F
b100 #
1!
#200
0!
#225
b11111 /
b11111 5
b11111 H
b11111 ,
b11111 3
b11111 B
b0 8
b11111 .
b11111 C
b11111 O
b11111 N
b11110 G
b0 I
b1111100000000111100010011 -
b1111100000000111100010011 @
b0 )
b0 4
b0 J
b11000 +
b11000 <
b11000 E
b10100 *
b10100 =
b10100 A
b10100 F
b101 #
1!
#250
0!
#275
b0 /
b0 5
b0 H
b0 0
b0 6
b0 :
b10000010 ,
b10000010 3
b10000010 B
b0 2
b0 9
b0 ?
01
b111 7
b111 .
b111 C
b111 O
b111 N
b11100 G
b10000010 (
b10000010 D
b10000010 L
b111 K
b1100 )
b1100 4
b1100 J
b110 I
b110011 >
b11100110111111000110011 -
b11100110111111000110011 @
b11100 +
b11100 <
b11100 E
b11000 *
b11000 =
b11000 A
b11000 F
b110 #
1!
#300
0!
#325
b10000010 /
b10000010 5
b10000010 H
b1 0
b1 6
b1 :
b100 7
b11101 G
b0 )
b0 4
b0 J
b11100 I
b11111100100111010110011 -
b11111100100111010110011 @
b100000 +
b100000 <
b100000 E
b11100 *
b11100 =
b11100 A
b11100 F
b111 #
1!
#350
0!
#375
b0 /
b0 5
b0 H
1'
b0 ,
b0 3
b0 B
b1101 .
b1101 C
b1101 O
b1101 N
b1110 G
b0 (
b0 D
b0 L
b1101 K
b1010 I
b110101010100011100110011 -
b110101010100011100110011 @
b100100 +
b100100 <
b100100 E
b100000 *
b100000 =
b100000 A
b100000 F
b1000 #
1!
#400
0!
#425
b100 0
b100 6
b100 :
b11111111111111111111111101111110 /
b11111111111111111111111101111110 5
b11111111111111111111111101111110 H
0'
b10000010 ,
b10000010 3
b10000010 B
b0 7
b100000 8
b10000000111 .
b10000000111 C
b10000000111 O
b10000000111 N
b101 G
b10000010 (
b10000010 D
b10000010 L
b111 K
b11100 I
b1000000011111100000001010110011 -
b1000000011111100000001010110011 @
b101000 +
b101000 <
b101000 E
b100100 *
b100100 =
b100100 A
b100100 F
b1001 #
1!
#450
0!
#475
b11111111111111111111111111111000 /
b11111111111111111111111111111000 5
b11111111111111111111111111111000 H
0'
b110 0
b110 6
b110 :
b11111111111111111111111111111000 ,
b11111111111111111111111111111000 3
b11111111111111111111111111111000 B
b1 2
b1 9
b1 ?
11
b1111111 8
b11111111111111111111111111111000 .
b11111111111111111111111111111000 C
b11111111111111111111111111111000 O
b111111111000 N
b11111 G
b0 (
b0 D
b0 L
b11000 K
b11111 I
b10011 >
b11111111100011111000111110010011 -
b11111111100011111000111110010011 @
b101100 +
b101100 <
b101100 E
b101000 *
b101000 =
b101000 A
b101000 F
b1010 #
1!
#500
0!
#525
b11111111111111111111111111110000 /
b11111111111111111111111111110000 5
b11111111111111111111111111110000 H
1'
b11111111111111111111111111111000 )
b11111111111111111111111111111000 4
b11111111111111111111111111111000 J
b110000 +
b110000 <
b110000 E
b101100 *
b101100 =
b101100 A
b101100 F
b1011 #
1!
#550
0!
#575
b11111111111111111111111111101000 /
b11111111111111111111111111101000 5
b11111111111111111111111111101000 H
0'
b110100 +
b110100 <
b110100 E
b110000 *
b110000 =
b110000 A
b110000 F
b11111111111111111111111111110000 )
b11111111111111111111111111110000 4
b11111111111111111111111111110000 J
b1100 #
1!
#600
0!
#625
b111111 /
b111111 5
b111111 H
b111111 ,
b111111 3
b111111 B
b1 8
b111111 .
b111111 C
b111111 O
b111111 N
b111 G
b11111111111111111111111111101000 (
b11111111111111111111111111101000 D
b11111111111111111111111111101000 L
b11111 K
b0 I
b11111100000000001110010011 -
b11111100000000001110010011 @
b0 )
b0 4
b0 J
b111000 +
b111000 <
b111000 E
b110100 *
b110100 =
b110100 A
b110100 F
b1101 #
1!
#650
0!
#675
b1111 /
b1111 5
b1111 H
b111 0
b111 6
b111 :
0'
b10000000010 ,
b10000000010 3
b10000000010 B
b101 7
b100000 8
b10000000010 .
b10000000010 C
b10000000010 O
b10000000010 N
b0 (
b0 D
b0 L
b10 K
b111111 )
b111111 4
b111111 J
b111 I
b1000000001000111101001110010011 -
b1000000001000111101001110010011 @
b111100 +
b111100 <
b111100 E
b111000 *
b111000 =
b111000 A
b111000 F
b1110 #
1!
#700
0!
#725
b11 /
b11 5
b11 H
b1111 )
b1111 4
b1111 J
b1000000 +
b1000000 <
b1000000 E
b111100 *
b111100 =
b111100 A
b111100 F
b1111 #
1!
#750
0!
#775
b0 /
b0 5
b0 H
b1000100 +
b1000100 <
b1000100 E
b1000000 *
b1000000 =
b1000000 A
b1000000 F
b11 )
b11 4
b11 J
b10000 #
1!
#800
0!
#825
b110 /
b110 5
b110 H
b10000000001 ,
b10000000001 3
b10000000001 B
b10000000001 .
b10000000001 C
b10000000001 O
b10000000001 N
b110 G
b1 K
b110 I
b1000000000100110101001100010011 -
b1000000000100110101001100010011 @
b1100 )
b1100 4
b1100 J
b1001000 +
b1001000 <
b1001000 E
b1000100 *
b1000100 =
b1000100 A
b1000100 F
b10001 #
1!
#850
0!
#875
b11 /
b11 5
b11 H
b1001100 +
b1001100 <
b1001100 E
b1001000 *
b1001000 =
b1001000 A
b1001000 F
b110 )
b110 4
b110 J
b10010 #
1!
#900
0!
#925
b1 /
b1 5
b1 H
b11 )
b11 4
b11 J
b1010000 +
b1010000 <
b1010000 E
b1001100 *
b1001100 =
b1001100 A
b1001100 F
b10011 #
1!
#950
0!
#975
b11111111111111111111111111010000 /
b11111111111111111111111111010000 5
b11111111111111111111111111010000 H
b10 0
b10 6
b10 :
b1 ,
b1 3
b1 B
b0 2
b0 9
b0 ?
01
b1 7
b0 8
b110 .
b110 C
b110 O
b110 N
b11111 G
b1 (
b1 D
b1 L
b110 K
b11111 I
b110011 >
b11011111001111110110011 -
b11011111001111110110011 @
b1010100 +
b1010100 <
b1010100 E
b1010000 *
b1010000 =
b1010000 A
b1010000 F
b11111111111111111111111111101000 )
b11111111111111111111111111101000 4
b11111111111111111111111111101000 J
b10100 #
1!
#1000
0!
#1025
b11111111111111111111111110100000 /
b11111111111111111111111110100000 5
b11111111111111111111111110100000 H
b11111111111111111111111111010000 )
b11111111111111111111111111010000 4
b11111111111111111111111111010000 J
b1011000 +
b1011000 <
b1011000 E
b1010100 *
b1010100 =
b1010100 A
b1010100 F
b10101 #
1!
#1050
0!
#1075
1'
b110 0
b110 6
b110 :
b0 ,
b0 3
b0 B
b1 2
b1 9
b1 ?
11
b0 /
b0 5
b0 H
b0 7
b0 .
b0 C
b0 O
b0 N
b0 G
b0 (
b0 D
b0 L
b0 K
b0 I
b0 >
b0 -
b0 @
b1011100 +
b1011100 <
b1011100 E
b1011000 *
b1011000 =
b1011000 A
b1011000 F
b0 )
b0 4
b0 J
b10110 #
1!
#1100
0!
#1125
b1100000 +
b1100000 <
b1100000 E
b1011100 *
b1011100 =
b1011100 A
b1011100 F
b10111 #
1!
#1150
0!
#1175
b1100100 +
b1100100 <
b1100100 E
b1100000 *
b1100000 =
b1100000 A
b1100000 F
b11000 #
1!
#1200
0!
#1225
b1101000 +
b1101000 <
b1101000 E
b1100100 *
b1100100 =
b1100100 A
b1100100 F
b11001 #
1!
#1250
0!
#1275
b1101100 +
b1101100 <
b1101100 E
b1101000 *
b1101000 =
b1101000 A
b1101000 F
b11010 #
1!
#1300
0!
#1325
b1110000 +
b1110000 <
b1110000 E
b1101100 *
b1101100 =
b1101100 A
b1101100 F
b11011 #
1!
#1350
0!
#1375
b1110100 +
b1110100 <
b1110100 E
b1110000 *
b1110000 =
b1110000 A
b1110000 F
b11100 #
1!
#1400
0!
#1425
b1111000 +
b1111000 <
b1111000 E
b1110100 *
b1110100 =
b1110100 A
b1110100 F
b11101 #
1!
#1450
0!
#1475
b1111100 +
b1111100 <
b1111100 E
b1111000 *
b1111000 =
b1111000 A
b1111000 F
b11110 #
1!
#1500
0!
#1525
b10000000 +
b10000000 <
b10000000 E
b1111100 *
b1111100 =
b1111100 A
b1111100 F
1!
